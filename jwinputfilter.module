<?php 


define("SOCJWPLAYERCODEKEY","
	<script language='text/javascript'>
		jwplayer.key='JWKEY';
	</script>");

define("SOCJWCODESNIPPET", "
	<div id='video'>Loading player</div>
	<script type='text/javascript'>
		jwplayer('video').setup({
			file: 'VIDEOFILE',
			image: 'IMAGEFILE',
			width: WIDTH,
			height: HEIGHT
		});
</script>");







function jwinputfilter_filter_info() {
	$filters['filter_html'] = array(
		'title' => t('JWPlayer embed code'),
		'description' => t('Replaces [JW:Video.mp4|Picture.jpg] with the javascript/HTML to produce a JW player'),
		'process callback' => 'jwinputfilter_filterprocess',
		'tips callback' => 'jwinputfilter_filter_tips',
		'settings callback' =>'_jwinputfilter_settings',
		'cache' => FALSE,
		);
	return $filters;
}


function jwinputfilter_filter_tips($filter, $format, $long) {
	if ($long) {
		return t('Produces JW player...' );
	}
	else {
		return t('Produces JW player...' );
	}
}


function jwinputfilter_filterprocess($text, $filter, $format, $langcode, $cache, $cache_id) {

	preg_match('/\[JW:(.*)\|(.*)\]/', $text, $matches);

	// Check to see if array items exists. The first two will of course be
	// the video name and thumbnail image. 
	if (isset($matches[1]) && isset($matches[2])) {

		$fullmatch = trim($matches[0]);
		$videoname = trim($matches[1]);
		$thumbname = trim($matches[2]);

		// being replacing template with actual values
		$produce_code = SOCJWCODESNIPPET; 
		$produce_code = str_replace("WIDTH", "600", $produce_code);
		$produce_code = str_replace("HEIGHT", "400", $produce_code);
		$produce_code = str_replace("VIDEOFILE", $videoname, $produce_code);
		$produce_code = str_replace("IMAGEFILE", $thumbname, $produce_code);

		// If key is set, use it and append it to the whole thing for output. 
		if (isset($filter->settings['soc_jwplayer_key_displayed'])) {
			$jwkey_code = str_replace("JWKEY", trim($filter->settings['soc_jwplayer_key_displayed']), SOCJWPLAYERCODEKEY);
			$produce_code = trim($jwkey_code) . trim($produce_code);
		}

		// dsm($produce_code);

		// include JS player
		if (isset($filter->settings['soc_jwplayer_playerurl']) && (!is_null($filter->settings['soc_jwplayer_playerurl']))) {
			$server_filename = $GLOBALS['_SERVER']['DOCUMENT_ROOT'] . '/' . $filter->settings['soc_jwplayer_playerurl'];
			$intrnt_pathname = $GLOBALS['_SERVER']['SERVER_NAME']  . '/' . $filter->settings['soc_jwplayer_playerurl'];
			if (file_exists($server_filename)) {
				drupal_add_js('//' . $intrnt_pathname);
			} else {
				$msg = t("Tried to include //$intrnt_pathname but the file $server_filename does not exist. Please check your path");
				drupal_set_message($msg, 'error');
				error_log($msg);
			}
		}


		$text = str_replace($fullmatch, $produce_code, $text);

	}

	return $text ;

}

/**
 * The settings function. The only option to currently set is the JW key. 
 * 
 */
function _jwinputfilter_settings($form, &$form_state, $filter, $format, $defaults) {
	$filter->settings += $defaults;

	// dsm($GLOBALS);

	$settings['soc_jwplayer_key_displayed'] = array(
		'#type' => 'textfield',
		'#title' => t('JWPlayer Input Filter Settings'),
		'#default_value' => $filter->settings['soc_jwplayer_key_displayed'],
		'#maxlength' => 1024,
		'#description' => t('The key to use in jwplayer.key=#### javascript embeded to page.'),
		);

	$settings['soc_jwplayer_playerurl'] = array(
		'#type' => 'textfield',
		'#title' => t('JWPlayer URL'),
		'#default_value' => $filter->settings['soc_jwplayer_playerurl'],
		'#maxlength' => 1024,
		'#description' => t('What is the path of the player? For example, something akin to <pre>/sites/default/files/page_specific_js/jwplayer/jwplayer.j</pre> '),
		);
	return $settings;
}
